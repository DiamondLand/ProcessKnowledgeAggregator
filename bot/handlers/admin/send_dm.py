from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext

from elements.keyboards.keyboards_utilits import form_cancel_kb

from functions.account.account_responses import check_account_login

from elements.answers import server_error, no_state

from events.states_group import Utilits

router = Router()


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å–ª–∞–Ω–∏—è ---
@router.callback_query(F.data == "send_dm")
async def send_dm(callback: CallbackQuery, state: FSMContext):
    await callback.answer(text="–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –æ—Ç–ø—Ä–∞–≤–∫–µ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.", show_alert=True)
    await state.set_state(Utilits.send_dm_get_login)

    await callback.message.answer(
        text="üíï –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∞–∫–∫–∞—É–Ω—Ç–∞, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ:",
        reply_markup=form_cancel_kb()
    )


# --- –í–≤–æ–¥ –ª–æ–≥–∏–Ω–∞ -> –≤–æ–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è ---
@router.message(Utilits.send_dm_get_login)
async def send_dm_get_login(message: Message, state: FSMContext):
    get_user_response = await check_account_login(
        config=message.bot.config,
        login=message.text[:300]
    )
    # * .json() -> [{'user_info'}: ..., {'user_subsribes'}: ..., {'user_statistic'}: ..., {'user_privileges'}: ..., {'blacklist_info'}: ...]

    if get_user_response.status_code == 200:
        if get_user_response.json()['user_info']:

            data = await state.get_data()
            data['get_user_response'] = get_user_response.json()
            await state.update_data(data=data)

            await state.set_state(Utilits.send_dm)

            await message.answer(
                text="üíå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:",
                reply_markup=form_cancel_kb()
            )
        else:
            await message.answer(text=f"–ê–∫–∫–∞—É–Ω—Ç <code>{message.text[:300]}</code> –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥:")
    else:
        await message.answer(text=server_error, reply_markup=form_cancel_kb())
    

# --- –í–æ–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è -> –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è ---
@router.message(Utilits.send_dm)
async def start_send_dm(message: Message, state: FSMContext):
    data = await state.get_data()
    
    if not data:
        await state.clear()
        return await message.answer(text=no_state)
    
    get_user_response = data['get_user_response']
    await state.clear()

    try:
        await message.bot.send_message(
            chat_id=get_user_response['user_info']['user_id'],
            text=f"<b>üíå –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏!</b>\
                \n-\
                \n{message.text[:1000]}"
        )
        await message.answer(
            text="üíñ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!",
            reply_markup=ReplyKeyboardRemove()
        )
    except:
        await message.answer(
            text="üíî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ—Å–∫–æ–ª—å–∫—É –Ω–µ –±—ã–ª –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω/—É–¥–∞–ª–∏–ª —á–∞—Ç —Å –±–æ—Ç–æ–≤.",
            reply_markup=ReplyKeyboardRemove()
        )
