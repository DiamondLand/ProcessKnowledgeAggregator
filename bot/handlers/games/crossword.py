from aiogram import Router
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from functions.crosswords.tasks import crossword
from functions.crosswords.shows import show_crossword

from events.states_group import Utilits

router = Router()


@router.message(Utilits.crossword_input)
async def fill_crossword(message: Message, state: FSMContext):
    guessed_word = message.text.strip().lower()

    for coords, data in crossword.items():
        if guessed_word == data['answer']:
            if not data['guessed']:
                crossword[coords]['guessed'] = True
                await message.answer(f"üíö –ü—Ä–∞–≤–∏–ª—å–Ω–æ! {guessed_word.capitalize()} –≤—ã—á–µ—Ä–∫–Ω—É—Ç–æ –∏–∑ –∫—Ä–æ—Å—Å–≤–æ—Ä–¥–∞!")
                return await show_crossword(message, state=state)
            else:
                await message.answer("üí• –≠—Ç–æ —Å–ª–æ–≤–æ —É–∂–µ –±—ã–ª–æ —É–≥–∞–¥–∞–Ω–æ!")
                return await show_crossword(message, state=state)

    await message.answer("üíî –ù–µ –≤–µ—Ä–Ω–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:")
    return await show_crossword(message, state=state)
